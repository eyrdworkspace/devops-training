apiVersion: v1
kind: Service
metadata:
  name: egov-apportion-service
  namespace: egov
  labels:
    app: egov-apportion-service
    group: core
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: egov-apportion-service
    group: core
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: egov-apportion-service
  namespace: egov
spec:
  replicas: {{conf['egov-apportion-service']['replicas']}}
  template:
    metadata:
      labels:
        app: egov-apportion-service
        group: core
    spec:
      initContainers: 
      - name: "egov-apportion-service-db-migration"
        image: "{{conf["egov-apportion-service"]["db_migration_image"]}}"
        env: 
        - name: "DB_URL"
          valueFrom: 
            configMapKeyRef: 
              name: egov-config
              key: db-url
        - name: "SCHEMA_TABLE"
          value: "egov_apportion_service_schema"
        - name: "FLYWAY_USER"
          valueFrom: 
            secretKeyRef: 
              name: db
              key: flyway-username
        - name: "FLYWAY_PASSWORD"
          valueFrom:
            secretKeyRef: 
              name: db
              key: flyway-password
        - name: "FLYWAY_LOCATIONS"
          valueFrom: 
            configMapKeyRef: 
              name: egov-config
              key: flyway-locations
        imagePullPolicy: "IfNotPresent"        
      containers:
      - name: egov-apportion-service
        image: {{conf['egov-apportion-service']['images'][0]}}
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /apportion-service/health
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 3
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /apportion-service/health
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 3
          periodSeconds: 60
          successThreshold: 1
          failureThreshold: 5        
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: FLYWAY_ENABLED
          value: "false"
        - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
          value: org.egov.tracer.kafka.deserializer.HashMapDeserializer
        - name: SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER
          value: org.apache.kafka.common.serialization.StringDeserializer
        - name: SPRING_KAFKA_CONSUMER_GROUP_ID
          value: egov-tl-services
        - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
          value: org.apache.kafka.common.serialization.StringSerializer
        - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
          value: org.springframework.kafka.support.serializer.JsonSerializer
        - name: PERSISTER_SAVE_APPORTION_REQUEST_TOPIC
          value: save-apportion-request
        - name: PERSISTER_SAVE_APPORTION_RESPONSE_TOPIC
          value: save-apportion-response
        - name: EGOV_MDMS_HOST
          value: "{{conf['egov-service-host']['egov-mdms-service']}}"
        - name: EGOV_MDMS_SEARCH_ENDPOINT
          value: "/egov-mdms-service/v1/_search"
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: JAVA_OPTS
          value: "{{conf['egov-apportion-service']['heap'] or '-Xmx256m -Xms256m'}}"
        - name: JAVA_ARGS
          value: "{{conf['egov-apportion-service']['java-args']}}"          
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
        - name: SERVER_PORT
          value: "8080"
        resources:
          requests:
            memory: "64Mi"
          limits:
            memory : "{{conf['egov-apportion-service']['memory_limits'] or "256Mi"}}"
