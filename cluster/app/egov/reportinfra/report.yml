apiVersion: v1
kind: Service
metadata:
  name: report
  namespace: egov
  labels:
    app: report
    group: reportinfra
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: report
    group: reportinfra
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: report
  namespace: egov
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: {{conf['report']['replicas']}}
  template:
    metadata:
      labels:
        app: report
        group: reportinfra
    spec:
      containers:
      - name: report
        image: {{conf['report']['images'][0]}}
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /report/health
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /report/health
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 5

        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: SERVER_CONTEXTPATH
          value: /report
        - name: FLYWAY_ENABLED
          value: "false"
{% if conf['report']['report-locationsfile-path'] %}
        - name: REPORT_LOCATIONSFILE_PATH
          value: "{{conf['report']['report-locationsfile-path']}}"
{% endif %}
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: JAVA_OPTS
          value: "{{conf['report']['heap'] or '-Xmx192m -Xms192m'}}"
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
        - name: SERVER_TOMCAT_MAX_THREADS
          value: "{{conf['egov-config']['server-tomcat-max-threads']}}"          
        - name: SERVER_TOMCAT_MAX_CONNECTIONS
          value: "{{conf['egov-config']['server-tomcat-max-connections']}}" 
        - name: SPRING_DATASOURCE_TOMCAT_MAX_ACTIVE
          value: "{{conf['egov-config']['spring-datasource-tomcat-max-active']}}"           
        - name: SERVER_PORT
          value: "8080"
        - name: TRACER_OPENTRACING_ENABLED
          value: "{{conf['report']['tracing-enabled']}}"
        - name: JAEGER_SERVICE_NAME
          value: report-service          
        - name: JAEGER_SAMPLER_TYPE
          value: remote
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
          value: "$(JAEGER_AGENT_HOST):5778"              
        - name: SECURITY_BASIC_ENABLED
          value: "false"  
        - name: MANAGEMENT_SECURITY_ENABLED
          value: "false"  
        - name: EGOV_MDMS_HOST
          value: "{{conf['egov-service-host']['egov-mdms-service']}}"   
        - name: EGOV_ENC_HOST
          value: "{{conf['egov-service-host']['egov-enc-service']}}"           
        - name: EGOV_STATE_LEVEL_TENANT_ID
          value: "{{conf['egov-config']['egov-state-level-tenant-id']}}" 
        - name: KAFKA_TOPIC_AUDIT
          value: "enc-report-audit-data"  
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers  
{% if conf['report']['tracing-enabled']%}          
        - name: TRACER_OPENTRACING_ENABLED
          value: "true" 
{% endif %}                                                 
        resources:
          requests:
            memory: "64Mi"
          limits:
            memory: "{{ conf['report']['memory_limits'] or "512Mi"}}"
