apiVersion: v1
kind: Service
metadata:
  name: firenoc-calculator
  namespace: egov
  labels:
    app: firenoc-calculator
    group: rainmaker
  annotations:
    prometheus.io/path: /firenoc-calculator/prometheus
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"    
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: "express"  
  - port: 5005
    targetPort: 5005
    name: "debug"
  selector:
    app: firenoc-calculator
    group: rainmaker
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: firenoc-calculator
  namespace: egov
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: {{conf['firenoc-calculator']['replicas']}}
  template:
    metadata:
      labels:
        app: firenoc-calculator
        group: rainmaker
    spec:
      initContainers: 
      - name: "firenoc-calculator-db-migration"
        image: "{{conf["firenoc-calculator"]["db_migration_image"]}}"
        env: 
        - name: "DB_URL"
          valueFrom: 
            configMapKeyRef: 
              name: egov-config
              key: db-url
        - name: "SCHEMA_TABLE"
          value: "firenoc_calculator_schema"
        - name: "FLYWAY_USER"
          valueFrom: 
            secretKeyRef: 
              name: db
              key: flyway-username
        - name: "FLYWAY_PASSWORD"
          valueFrom:
            secretKeyRef: 
              name: db
              key: flyway-password
        - name: "FLYWAY_LOCATIONS"
          valueFrom: 
            configMapKeyRef: 
              name: egov-config
              key: flyway-locations
        imagePullPolicy: "IfNotPresent"    
      containers:
      - name: firenoc-calculator
        image: {{conf['firenoc-calculator']['images'][0]}}
        ports:
        - containerPort: 8080
          name: "express"
        - containerPort: 5005
          name: "debug"
        # readinessProbe:
        #   httpGet:
        #     path: /firenoc-calculator/health
        #     port: 8080
        #   initialDelaySeconds: 90
        #   timeoutSeconds: 3
        #   periodSeconds: 30
        #   successThreshold: 1
        #   failureThreshold: 5
        # livenessProbe:
        #   httpGet:
        #     path: /firenoc-calculator/health
        #     port: 8080
        #   initialDelaySeconds: 120
        #   timeoutSeconds: 3
        #   periodSeconds: 60
        #   successThreshold: 1
        #   failureThreshold: 5
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-host
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-name
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: DB_SSL
          value: "false"                
        - name: SERVER_TOMCAT_MAX_THREADS
          value: "{{conf['egov-config']['server-tomcat-max-threads']}}"  
        - name: SERVER_TOMCAT_MAX_CONNECTIONS
          value: "{{conf['egov-config']['server-tomcat-max-connections']}}" 
        - name: SPRING_DATASOURCE_TOMCAT_MAX_ACTIVE
          value: "{{conf['egov-config']['spring-datasource-tomcat-max-active']}}"                         
        - name: FLYWAY_ENABLED
          value: "false"
        - name: EGOV_BILLINGSERVICE_HOST
          value: "{{conf['egov-service-host']['billing-service']}}"
        - name: EGOV_MDMS_HOST
          value: "{{conf['egov-service-host']['egov-mdms-service']}}"
        - name: EGOV_USER_HOST
          value: "{{conf['egov-service-host']['egov-user']}}"
        - name: EGOV_FIRENOC_SERVICE_HOST
          value: "{{conf['egov-service-host']['firenoc-services']}}"
        - name: EGOV_LOCALIZATION_HOST
          value: "{{conf['egov-service-host']['egov-localization']}}"
        - name: EGOV_MDMS_SEARCH_ENDPOINT
          value: "/egov-mdms-service/v1/_search"
        - name: DB_PORT
          value: "5432"          
        - name: KAFKA_TOPICS_SAVE_SERVICE
          value: "save-firenoc-calculator-billingslab"
        - name: KAFKA_TOPICS_UPDATE_SERVICE
          value: "update-firenoc-calculator-billingslab"
        - name: KAFKA_TOPICS_NOTIFICATION_SMS
          value: "egov.core.notification.sms"
        - name: SPRING_KAFKA_CONSUMER_GROUP_ID
          value: egov-firenoc-calculator
        - name: KAFKA_BOOTSTRAP_SERVER
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: SERVER_PORT
          value: "8080"
        - name: JAEGER_SERVICE_NAME
          value: firenoc-calculator
        - name: JAEGER_SAMPLER_TYPE
          value: remote
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
          value: "$(JAEGER_AGENT_HOST):5778"   
        # resources:
        #   requests:
        #     memory: "64Mi"
        #   limits:
        #     memory: "{{ conf['firenoc-calculator']['memory_limits'] or "512Mi"}}"