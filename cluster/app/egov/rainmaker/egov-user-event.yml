apiVersion: v1
kind: Service
metadata:
  name: egov-user-event
  namespace: egov
  labels:
    app: egov-user-event
    group: rainmaker
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: egov-user-event
    group: rainmaker
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: egov-user-event
  namespace: egov
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: {{conf['egov-user-event']['replicas']}}
  template:
    metadata:
      labels:
        app: egov-user-event
        group: rainmaker
    spec:
      initContainers: 
      - name: "egov-user-event-db-migration"
        image: "{{conf["egov-user-event"]["db_migration_image"]}}"
        env: 
        - name: "DB_URL"
          valueFrom: 
            configMapKeyRef: 
              name: egov-config
              key: db-url
        - name: "SCHEMA_TABLE"
          value: "egov_user_event_schema_version"
        - name: "FLYWAY_USER"
          valueFrom: 
            secretKeyRef: 
              name: db
              key: flyway-username
        - name: "FLYWAY_PASSWORD"
          valueFrom:
            secretKeyRef: 
              name: db
              key: flyway-password
        - name: "FLYWAY_LOCATIONS"
          valueFrom: 
            configMapKeyRef: 
              name: egov-config
              key: flyway-locations
        imagePullPolicy: "IfNotPresent"    
      containers:
      - name: egov-user-event
        image: {{conf['egov-user-event']['images'][0]}}
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /egov-user-event/health
            port: 8080
          initialDelaySeconds: 90
          timeoutSeconds: 3
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /egov-user-event/health
            port: 8080
          initialDelaySeconds: 120
          timeoutSeconds: 3
          periodSeconds: 60
          successThreshold: 1
          failureThreshold: 5
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: SERVER_TOMCAT_MAX_CONNECTIONS
          value: "{{conf['egov-config']['server-tomcat-max-connections']}}" 
        - name: SPRING_DATASOURCE_TOMCAT_MAX_ACTIVE
          value: "{{conf['egov-config']['spring-datasource-tomcat-max-active']}}"                          
        - name: EGOV_MDMS_HOST
          value: "{{conf['egov-service-host']['egov-mdms-service']}}"
        - name: EGOV_MDMS_SEARCH_ENDPOINT
          value: /egov-mdms-service/v1/_search
        - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
          value: org.egov.tracer.kafka.deserializer.HashMapDeserializer
        - name: SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER
          value: org.apache.kafka.common.serialization.StringDeserializer
        - name: SPRING_KAFKA_CONSUMER_GROUP_ID
          value: egov-user-events
        - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
          value: org.apache.kafka.common.serialization.StringSerializer
        - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
          value: org.springframework.kafka.support.serializer.JsonSerializer
        - name: KAFKA_TOPICS_PERSISTER_SAVE_EVENTS
          value: save-user-events
        - name: KAFKA_TOPICS_PERSISTER_UPDATE_EVENTS
          value: update-user-events
        - name: KAFKA_TOPICS_LLT_DETAILS
          value: user-events-llt
        - name: KAFKA_TOPICS_SAVE_EVENTS
          value: persist-user-events-async
        - name: KAFKA_TOPICS_UPDATE_EVENTS
          value: update-user-events-async
        - name: MSEVA_NOTIF_SEARCH_OFFSET
          value: "0"
        - name: MSEVA_NOTIF_SEARCH_LIMIT
          value: "200"
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: JAVA_OPTS
          value: "{{conf['egov-user-event']['heap'] or '-Xmx192m -Xms192m'}}"
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
        - name: SERVER_PORT
          value: "8080"
        - name: FLYWAY_ENABLED
          value: "false"
        - name: JAEGER_SERVICE_NAME
          value: egov-user-event
        - name: JAEGER_SAMPLER_TYPE
          value: remote
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
          value: $(JAEGER_AGENT_HOST):5778          
        - name: JAVA_ARGS
          value: "{{conf['egov-user-event']['java-args']}}"
        - name: SECURITY_BASIC_ENABLED
          value: "false"  
        - name: MANAGEMENT_SECURITY_ENABLED
          value: "false"    
        - name: EGOV_MDMS_HOST
          value: "{{conf['egov-config']['egov-services-fqdn-name']}}"
        - name: EGOV_LOCALISATION_HOST
          value: "{{conf['egov-service-host']['egov-localization']}}"
        - name: EGOV_LOCALISATION_IS_STATELEVEL
          value: "false"
        - name: MSEVA_NOTIF_SEARCH_OFFSET
          value: "0"
        - name: MSEVA_NOTIF_SEARCH_LIMIT
          value: "200"                     
{% if conf['egov-user-event']['tracing-enabled']%}          
        - name: TRACER_OPENTRACING_ENABLED
          value: "true" 
{% endif %}                