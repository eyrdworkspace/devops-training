apiVersion: v1
kind: Service
metadata:
  name: pdf-service
  namespace: egov
  labels:
    app: pdf-service
    group: rainmaker
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: "express"  
  - port: 5005
    targetPort: 5005
    name: "debug"
  selector:
    app: pdf-service
    group: rainmaker
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: pdf-service
  namespace: egov
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: {{conf['pdf-service']['replicas']}}
  template:
    metadata:
      labels:
        app: pdf-service
        group: rainmaker
    spec:
      initContainers: 
      - name: "pdf-service-db-migration"
        image: "{{conf["pdf-service"]["db_migration_image"]}}"
        env: 
        - name: "DB_URL"
          valueFrom: 
            configMapKeyRef: 
              name: egov-config
              key: db-url
        - name: "SCHEMA_TABLE"
          value: "pdf_service_schema"
        - name: "FLYWAY_USER"
          valueFrom: 
            secretKeyRef: 
              name: db
              key: flyway-username
        - name: "FLYWAY_PASSWORD"
          valueFrom:
            secretKeyRef: 
              name: db
              key: flyway-password
        - name: "FLYWAY_LOCATIONS"
          valueFrom: 
            configMapKeyRef: 
              name: egov-config
              key: flyway-locations
        imagePullPolicy: "IfNotPresent"    
      containers:
      - name: pdf-service
        image: {{conf['pdf-service']['images'][0]}}
        ports:
        - containerPort: 8080
          name: "express"
        - containerPort: 5005
          name: "debug"
        # readinessProbe:
        #   httpGet:
        #     path: /pdf-service/health
        #     port: 8080
        #   initialDelaySeconds: 90
        #   timeoutSeconds: 3
        #   periodSeconds: 30
        #   successThreshold: 1
        #   failureThreshold: 5
        # livenessProbe:
        #   httpGet:
        #     path: /pdf-service/health
        #     port: 8080
        #   initialDelaySeconds: 120
        #   timeoutSeconds: 3
        #   periodSeconds: 60
        #   successThreshold: 1
        #   failureThreshold: 5
        env:
        - name: KAFKA_BROKER_HOST
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: SERVER_PORT
          value: "8080"
        - name: MAX_NUMBER_PAGES
          value: "80"   
        - name: EGOV_LOCALISATION_HOST
          value: "{{conf['egov-service-host']['egov-localization']}}"    
        - name: EGOV_FILESTORE_SERVICE_HOST
          value: "{{conf['egov-service-host']['egov-filestore']}}"                               
        - name: EGOV_HOST
          value: "{{conf['egov-config']['egov-services-fqdn-name']}}"          
        - name: JAEGER_SERVICE_NAME
          value: pdf-service
        - name: JAEGER_SAMPLER_TYPE
          value: remote
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
          value: "$(JAEGER_AGENT_HOST):5778"  
        # resources:
        #   requests:
        #     memory: "64Mi"
        #   limits:
        #     memory: "{{ conf['pdf-service']['memory_limits'] or "512Mi"}}"