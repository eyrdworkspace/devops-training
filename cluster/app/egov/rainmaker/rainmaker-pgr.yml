apiVersion: v1
kind: Service
metadata:
  name: rainmaker-pgr
  namespace: egov
  labels:
    app: rainmaker-pgr
    group: rainmaker
  annotations:
    prometheus.io/path: /rainmaker-pgr/prometheus
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"     
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: rainmaker-pgr
    group: rainmaker
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rainmaker-pgr
  namespace: egov
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: {{conf['rainmaker-pgr']['replicas']}}
  template:
    metadata:
      labels:
        app: rainmaker-pgr
        group: rainmaker
    spec:
      initContainers: 
      - name: "rainmaker-pgr-db-migration"
        image: "{{conf["rainmaker-pgr"]["db_migration_image"]}}"
        env: 
        - name: "DB_URL"
          valueFrom: 
            configMapKeyRef: 
              name: egov-config
              key: db-url
        - name: "SCHEMA_TABLE"
          value: "rainmaker_pgr_schema"
        - name: "FLYWAY_USER"
          valueFrom: 
            secretKeyRef: 
              name: db
              key: flyway-username
        - name: "FLYWAY_PASSWORD"
          valueFrom:
            secretKeyRef: 
              name: db
              key: flyway-password
        - name: "FLYWAY_LOCATIONS"
          valueFrom: 
            configMapKeyRef: 
              name: egov-config
              key: flyway-locations
        imagePullPolicy: "IfNotPresent"
      containers:
      - name: rainmaker-pgr
        image: {{conf['rainmaker-pgr']['images'][0]}}
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /rainmaker-pgr/health
            port: 8080
          initialDelaySeconds: 90
          timeoutSeconds: 3
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /rainmaker-pgr/health
            port: 8080
          initialDelaySeconds: 120
          timeoutSeconds: 3
          periodSeconds: 60
          successThreshold: 1
          failureThreshold: 5
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: password
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: kafka-brokers
        - name: SERVER_TOMCAT_MAX_THREADS
          value: "{{conf['egov-config']['server-tomcat-max-threads']}}"     
        - name: SERVER_TOMCAT_MAX_CONNECTIONS
          value: "{{conf['egov-config']['server-tomcat-max-connections']}}" 
        - name: SPRING_DATASOURCE_TOMCAT_MAX_ACTIVE
          value: "{{conf['egov-config']['spring-datasource-tomcat-max-active']}}"                    
        - name: FLYWAY_ENABLED
          value: "false"
        - name: SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER
          value: org.apache.kafka.common.serialization.StringDeserializer
        - name: SPRING_KAFKA_CONSUMER_GROUP_ID
          value: rainmaker-service
        - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
          value: org.apache.kafka.common.serialization.StringSerializer
{% if conf['egov-config']['serializers-timezone-in-ist'] %}
        - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
          value: org.egov.tracer.kafka.deserializer.ISTTimeZoneHashMapDeserializer
        - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
          value: org.egov.tracer.kafka.serializer.ISTTimeZoneJsonSerializer
{% endif %}
        - name: EGOV_IDGEN_HOST
          value: "{{conf['egov-service-host']['egov-idgen']}}"
        - name: EGOV_MDMS_HOST
          value: "{{conf['egov-service-host']['egov-mdms-service']}}"
        - name: EGOV_LOCALIZATION_HOST
          value: "{{conf['egov-service-host']['egov-localization']}}"
        - name: EGOV_INFRA_SEARCHER_HOST
          value: "{{conf['egov-service-host']['egov-searcher']}}"
        - name: EGOV_HR_EMPLOYEE_HOST
          value: "{{conf['egov-service-host']['hr-employee']}}"
        - name: EGOV_HR_EMPLOYEE_V2_HOST
          value: "{{conf['egov-service-host']['hr-employee-v2']}}"
        - name: EGOV_COMMON_MASTERS_HOST
          value: "{{conf['egov-service-host']['egov-common-masters']}}"
        - name: EGOV_FILESTORE_HOST
          value: "{{conf['egov-service-host']['egov-filestore']}}"
        - name: EGOV_UI_APP_HOST
          value: "{{conf['egov-config']['egov-services-fqdn-name']}}"
        - name: EGOV_USER_HOST
          value: "{{conf['egov-service-host']['egov-user']}}"
        - name: NOTIFICATION_SMS_ENABLED
          value: "{{conf['rainmaker-pgr']['notification-sms-enabled']}}"
        - name: NOTIFICATION_EMAIL_ENABLED
          value: "{{conf['rainmaker-pgr']['notification-email-enabled']}}"
        - name: NEW_COMPLAINT_ENABLED
          value: "{{conf['rainmaker-pgr']['new-complaint-enabled']}}"
        - name: REASSIGN_COMPLAINT_ENABLED
          value: "{{conf['rainmaker-pgr']['reassign-complaint-enabled']}}"
        - name: REOPEN_COMPLAINT_ENABLED
          value: "{{conf['rainmaker-pgr']['reopen-complaint-enabled']}}"
        - name: COMMENT_BY_EMPLOYEE_NOTIF_ENABLED
          value: "{{conf['rainmaker-pgr']['comment-by-employee-notif-enabled']}}"
        - name: EGOV_PGR_APP_PLAYSTORE_LINK
          value: "https://goo.gl/ArDyQ1"
        - name: NOTIFICATION_ALLOWED_ON_STATUS
          value: "{{conf['rainmaker-pgr']['notification-allowed-status']}}"
        - name: EGOV_HRMS_HOST
          value: "{{conf['egov-service-host']['egov-hrms']}}"
{% if conf['egov-config']['tracer-errors-provideexceptionindetails'] %}
        - name: TRACER_ERRORS_PROVIDEEXCEPTIONINDETAILS
          value: "{{conf['egov-config']['tracer-errors-provideexceptionindetails']}}"
{% endif %}
        - name: APP_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: egov-config
              key: timezone
        - name: JAVA_OPTS
          value: "{{conf['rainmaker-pgr']['heap'] or '-Xmx192m -Xms192m'}}"
        - name: JAVA_ARGS
          value: "{{conf['rainmaker-pgr']['java-args']}}"          
        - name: SPRING_JPA_SHOW_SQL
          value: "{{conf['egov-config']['spring-jpa-show-sql']}}"
        - name: SERVER_PORT
          value: "8080"
        - name: JAEGER_SERVICE_NAME
          value: rainmaker-pgr
        - name: JAEGER_SAMPLER_TYPE
          value: remote
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
          value: "$(JAEGER_AGENT_HOST):5778"             
        - name: SECURITY_BASIC_ENABLED
          value: "false"  
        - name: MANAGEMENT_SECURITY_ENABLED
          value: "false" 
        - name: EGOV_LOCATION_HOST
          value: "{{conf['egov-service-host']['egov-location']}}"
        - name: EGOV_USR_EVENTS_NOTIFICATION_ENABLED
          value: "true"
        - name: EGOV_USR_EVENTS_CREATE_TOPIC
          value: "persist-user-events-async"
        - name: EGOV_USR_EVENTS_RATE_LINK
          value: "/citizen/otpLogin?mobileNo=$mobile&redirectTo=feedback/$servicerequestid"
        - name: EGOV_USR_EVENTS_REOPEN_LINK
          value: "/citizen/otpLogin?mobileNo=$mobile&redirectTo=reopen-complaint/$servicerequestid"
        - name: EGOV_USR_EVENTS_RATE_CODE
          value: "RATE"
        - name: EGOV_USR_EVENTS_REOPEN_CODE
          value: "REOPEN"          
{% if conf['rainmaker-pgr']['tracing-enabled']%}          
        - name: TRACER_OPENTRACING_ENABLED
          value: "true" 
{% endif %}                
        # resources:
        #   requests:
        #     memory: "64Mi"
        #   limits:
        #     memory: "{{ conf['rainmaker-pgr']['memory_limits'] or "512Mi"}}"
#        securityContext:
#          capabilities:
#            add:
#              - NET_ADMIN
